/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (typeof TextEncoder !== 'function') {
    const TextEncodingPolyfill = require('text-encoding');
    Object.assign(global, { TextEncoder: TextEncodingPolyfill.TextEncoder });
    Object.assign(global, { TextDecoder: TextEncodingPolyfill.TextDecoder });
}

import React from 'react';
import * as components from './components';
import { Buffer } from "buffer";
import randomBytes from "randombytes";
import { ITransport } from "@secux/transport";
import { SecuxWebUSB } from "@secux/transport-webusb";
import { SecuxWebHID } from "@secux/transport-webhid";
import { SecuxWebBLE } from "@secux/transport-webble";
import { SecuxTransactionTool } from "@secux/protocol-transaction";
import * as protocolInterface from "@secux/protocol-transaction/lib/interface";
import * as btcLib from "@secux/app-btc";
import mempoolJS from "@mempool/mempool.js";
import * as ethLib from "@secux/app-eth";
import { ethers } from "ethers";
import * as bnbLib from "@secux/app-bnb";
import * as adaLib from "@secux/app-ada";
import * as xrpLib from "@secux/app-xrp";
import * as xrpl from "xrpl";
import * as trxLib from "@secux/app-trx";
const TronWeb = require("tronweb");
import * as xlmLib from "@secux/app-xlm";
import * as solLib from "@secux/app-sol";
const solanaWeb3 = require("@solana/web3.js");
import * as lunaLib from "@secux/app-luna";
import * as providers from "@secux/providers";
import axios from "axios";
import { Html5QrcodeScanner } from "html5-qrcode";
import { SecuxDeviceNifty } from "@secux/protocol-device";
import { AttachmentType } from "@secux/protocol-device/lib/interface";


const SecuXImage = "";


const interval = 100;
const injection = async () => {
    try {
        // @ts-ignore
        window.secux = new providers.EIP1193Provider("https://rpc.ankr.com/eth_goerli");
    } catch (error) {
        setTimeout(injection, interval);
    }
};
setTimeout(injection, interval);

// Add react-live imports you need here
const ReactLiveScope = {
    React,
    ...React,
    ...components,
    Buffer,
    randomBytes,
    ITransport,
    SecuxWebUSB,
    SecuxWebHID,
    SecuxWebBLE,
    SecuxTransactionTool,
    ...protocolInterface,
    ...btcLib,
    mempoolJS,
    ...ethLib,
    ethers,
    ...bnbLib,
    ...adaLib,
    ...xrpLib,
    xrpl,
    ...trxLib,
    TronWeb,
    ...xlmLib,
    ...solLib,
    solanaWeb3,
    ...lunaLib,
    ...providers,
    axios,
    Html5QrcodeScanner,
    SecuxDeviceNifty,
    SecuXImage,
    AttachmentType
};

export default ReactLiveScope;